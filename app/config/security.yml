security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        GCBA\StoreBundle\Entity\SysUsuario: sha512 
        GCBA\StoreBundle\Security\User\WebserviceUser: plaintext


        
   # role_hierarchy:
   #     ROLE_ADMIN:       ROLE_USER
   #     ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
       chain_provider:
         chain:
            providers:  [webservice,in_memory ]  
       in_memory:
           memory:
                users:
                   admin: { password: troquelad0, roles: [ 'ROLE_SUPERADMIN' ] }
                   admin2: { password: troquelado, roles: [ 'ROLE_SUPERADMIN' ] }
       user_db:
               entity: { class: GCBA\StoreBundle\Entity\SysUsuario, property: usuario }    

       webservice:
            id: webservice_user_provider          
    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false
        login_firewall:
            pattern:    ^/login$
            anonymous:  ~
        secured_area:
            pattern:    ^/
            http_basic:
                realm: "Aplicacion Cap" 
            form_login:
                check_path: login_check
                login_path: login
                # if true, forward the user to the login form instead of redirecting
                use_forward:                    false

                # submit the login form here
                check_path:                     /login_check

                # by default, the login form *must* be a POST, not a GET
                post_only:                      true

                # login success redirecting options (read further below)
                always_use_default_target_path: false
                default_target_path:            /
                target_path_parameter:          _target_path
                use_referer:                    false

                # login failure redirecting options (read further below)
                failure_path:                   null
                failure_forward:                false

                # field names for the username and password fields
                username_parameter:             _username
                password_parameter:             _password

                # csrf token options
                csrf_parameter:                 _csrf_token
                intention:                      authenticate
    
            
           
            logout:
                path:    /logout
                target: /
            anonymous: ~
   

    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles:  IS_AUTHENTICATED_FULLY  }

